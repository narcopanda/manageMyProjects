{"version":3,"sources":["actions/projectAction.js","actions/types.js","DateFormat/DateFormat.js","components/Project/ProjectItem.js","components/Project/CreateProjectBtn.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/securityAction.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogAction.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Auth/Login.js","components/Auth/Register.js","components/Layout/Landing.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","type","payload","t0","response","data","stop","_x","apply","this","arguments","formatDate","string","Date","toLocaleDateString","timeZone","month","day","year","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","start_date","end_date","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectBtn","Fragment","Dashboard","getProjects","projects","Project_CreateProjectBtn","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","onChange","assertThisInitialized","onSubmit","e","setState","defineProperty","target","name","value","nextProps","preventDefault","newProject","console","log","classnames","is-invalid","placeholder","initState","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSeq","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","_nextProps$project","match","params","getProject","updateProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptCriteria","dueDate","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","BoardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","newTask","addProjectTask","UpdateProjectTask","create_At","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","patch","Login","username","password","LoginRequest","login","decoded","setItem","jwt_decode","Register","confirmPassword","newUser","createNewUser","Landing","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","now","exp","App","es","Layout_Header","exact","path","SecureRoute","Boolean","hostname","ReactDOM","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8e5e0ebf.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Get_Errors, Get_Projects, Get_Project, Delete_Project } from \"./types\";\n\nexport const createProject = (project, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/project\", project);\n    history.push(\"/dashboard\");\n    dispatch({\n      type: Get_Errors,\n      payload: {}\n    });\n  } catch (error) {\n    dispatch({\n      type: Get_Errors,\n      payload: error.response.data\n    });\n  }\n};\n\nexport const getProjects = () => async dispatch => {\n  const res = await axios.get(\"/api/project/all\");\n  dispatch({\n    type: Get_Projects,\n    payload: res.data\n  });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${id}`);\n    console.log(res.data);\n\n    dispatch({\n      type: Get_Project,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const deleteProject = id => async dispatch => {\n  if (\n    window.confirm(\n      \"Are you sure? This will delete the project and all the data related to it\"\n    )\n  ) {\n    await axios.delete(`/api/project/${id}`);\n    dispatch({\n      type: Delete_Project,\n      payload: id\n    });\n  }\n};\n","export const Get_Errors = \"GET_ERRORS\";\nexport const Get_Projects = \"GET_PROJECTS\";\nexport const Get_Project = \"Get_Project\";\nexport const Delete_Project = \"Delete_Project\";\n\n//backlog\nexport const Get_Backlog = \"Get_backlog\";\nexport const Get_Project_Task = \"Get_Project_Task\";\nexport const Delete_Project_Task = \"Delete_Project_Task\";\nexport const Set_Current_User = \"Set_Current_User\";\n","export const formatDate = string => {\n  var temp = new Date(string);\n\n  return temp.toLocaleDateString(\n    \"en-US\",\n    { timeZone: \"UTC\" },\n    {\n      month: \"numeric\",\n      day: \"numeric\",\n      year: \"numeric\"\n    }\n  );\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { deleteProject } from \"../../actions/projectAction\";\nimport { formatDate } from \"../../DateFormat/DateFormat\";\n\n// font awsome has the i tags\nclass ProjectItem extends Component {\n  onDeleteClick = id => {\n    this.props.deleteProject(id);\n  };\n\n  render() {\n    const { project } = this.props;\n\n    return (\n      <div className=\"container\">\n        <div className=\"card card-body bg-light mb-3\">\n          <div className=\"row\">\n            <div className=\"col-2\">\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\n            </div>\n            <div className=\"col-lg-6 col-md-4 col-8\">\n              <h3>{project.projectName}</h3>\n              <p>{project.description}</p>\n              <h3>Start date: {formatDate(project.start_date)}</h3>\n              <h3>End date: {formatDate(project.end_date)}</h3>\n            </div>\n            <div className=\"col-md-4 d-none d-lg-block\">\n              <ul className=\"list-group\">\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item board\">\n                    <i className=\"fas fa-bookmark pr-1\"> Project Board </i>\n                  </li>\n                </Link>\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\n                  <li className=\"list-group-item update\">\n                    <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                  </li>\n                </Link>\n                <li\n                  className=\"list-group-item delete\"\n                  onClick={this.onDeleteClick.bind(\n                    this,\n                    project.projectIdentifier\n                  )}\n                >\n                  <i className=\"fas fa-trash-alt\"> Delete Project</i>\n                </li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nProjectItem.propTypes = {\n  deleteProject: PropTypes.func.isRequired\n};\n\nexport default connect(\n  null,\n  { deleteProject }\n)(ProjectItem);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst CreateProjectBtn = () => {\n  return (\n    <React.Fragment>\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\n        Create a Project\n      </Link>\n    </React.Fragment>\n  );\n};\n\nexport default CreateProjectBtn;\n","import React, { Component } from \"react\";\nimport ProjectItem from \"./Project/ProjectItem\";\nimport CreateProjectBtn from \"./Project/CreateProjectBtn\";\nimport { connect } from \"react-redux\";\nimport { getProjects } from \"../actions/projectAction\";\nimport PropTypes from \"prop-types\";\n\nclass Dashboard extends Component {\n  componentDidMount() {\n    this.props.getProjects();\n  }\n\n  render() {\n    const { projects } = this.props.project;\n    return (\n      <div className=\"projects\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12\">\n              <h1 className=\"display-4 text-center\">Projects</h1>\n              <br />\n              <CreateProjectBtn />\n\n              <br />\n              <hr />\n              {projects.map(project => (\n                <ProjectItem key={project.id} project={project} />\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nDashboard.propTypes = {\n  project: PropTypes.object.isRequired,\n  getProjects: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjects }\n)(Dashboard);\n","import axios from \"axios\";\n\nconst setJWTToken = token => {\n  if (token) {\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setJWTToken;\n","import axios from \"axios\";\nimport { Get_Errors, Set_Current_User } from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUser = (newUser, history) => async dispatch => {\n  try {\n    await axios.post(\"/api/users/register\", newUser);\n    history.push(\"/login\");\n    dispatch({\n      type: Get_Errors,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: Get_Errors,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const login = LoginRequest => async dispatch => {\n  try {\n    // post => Login Request\n    const res = await axios.post(\"/api/users/login\", LoginRequest);\n    // extract token from res.data\n    const { token } = res.data;\n    // store the token in the localStorage\n    localStorage.setItem(\"jwtToken\", token);\n    // set our token in header ***\n    setJWTToken(token);\n    // decode token on React\n    const decoded = jwt_decode(token);\n    // dispatch to our securityReducer\n    dispatch({\n      type: Set_Current_User,\n      payload: decoded\n    });\n  } catch (err) {\n    dispatch({\n      type: Get_Errors,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const logout = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setJWTToken(false);\n  dispatch({\n    type: Set_Current_User,\n    payload: {}\n  });\n};\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../actions/securityAction\";\n\nclass Header extends Component {\n  logout() {\n    this.props.logout();\n    window.location.href = \"/\";\n  }\n  render() {\n    const { validToken, user } = this.props.security;\n\n    const userIsAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              Dashboard\n            </Link>\n          </li>\n        </ul>\n\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/dashboard\">\n              <i className=\"fas fa-user-circle mr-1\" />\n              {user.fullName}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              to=\"/logout\"\n              onClick={this.logout.bind(this)}\n            >\n              Logout\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    const userIsNotAuthenticated = (\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/register\">\n              Sign Up\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      </div>\n    );\n\n    let headerLinks;\n\n    if (validToken && user) {\n      headerLinks = userIsAuthenticated;\n    } else {\n      headerLinks = userIsNotAuthenticated;\n    }\n\n    return (\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            Manage My Projects\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#mobile-nav\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          {headerLinks}\n        </div>\n      </nav>\n    );\n  }\n}\n\nHeader.propTypes = {\n  logout: PropTypes.func.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(\n  mapStateToProps,\n  { logout }\n)(Header);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createProject } from \"../../actions/projectAction\";\nimport classnames from \"classnames\";\n\nclass AddProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  //life cycle hooks\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newProject = {\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n    this.props.createProject(newProject, this.props.history);\n\n    console.log(newProject);\n    console.log(this.state.errors);\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <div>\n        <div className=\"project\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 m-auto\">\n                <h5 className=\"display-4 text-center\">Create Project form</h5>\n                <hr />\n                <form onSubmit={this.onSubmit}>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectName\n                      })}\n                      placeholder=\"Project Name\"\n                      name=\"projectName\"\n                      value={this.state.projectName}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectName && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectName}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"text\"\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.projectIdentifier\n                      })}\n                      placeholder=\"Unique Project ID\"\n                      name=\"projectIdentifier\"\n                      value={this.state.projectIdentifier}\n                      onChange={this.onChange}\n                    />\n                    {errors.projectIdentifier && (\n                      <div className=\"invalid-feedback\">\n                        {errors.projectIdentifier}\n                      </div>\n                    )}\n                  </div>\n                  <div className=\"form-group\">\n                    <textarea\n                      className={classnames(\"form-control form-control-lg\", {\n                        \"is-invalid\": errors.description\n                      })}\n                      placeholder=\"Project Description\"\n                      name=\"description\"\n                      value={this.state.description}\n                      onChange={this.onChange}\n                    />\n                    {errors.description && (\n                      <div className=\"invalid-feedback\">\n                        {errors.description}\n                      </div>\n                    )}\n                  </div>\n                  <h6>Start Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"start_date\"\n                      value={this.state.start_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n                  <h6>Estimated End Date</h6>\n                  <div className=\"form-group\">\n                    <input\n                      type=\"date\"\n                      className=\"form-control form-control-lg\"\n                      name=\"end_date\"\n                      value={this.state.end_date}\n                      onChange={this.onChange}\n                    />\n                  </div>\n\n                  <input\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-block mt-4\"\n                  />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nAddProject.propTypes = {\n  createProject: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\nexport default connect(\n  mapStateToProps,\n  { createProject }\n)(AddProject);\n","import { Get_Errors } from \"../actions/types\";\n\nconst initState = {};\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case Get_Errors:\n      return action.payload;\n\n    default:\n      return state;\n  }\n}\n","import { Get_Projects, Get_Project, Delete_Project } from \"../actions/types\";\n\nconst initialState = {\n  projects: [],\n  project: {}\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Get_Projects:\n      return {\n        ...state,\n        projects: action.payload\n      };\n\n    case Get_Project:\n      return {\n        ...state,\n        project: action.payload\n      };\n\n    case Delete_Project:\n      return {\n        ...state,\n        projects: state.projects.filter(\n          project => project.projectIdentifier !== action.payload\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  Get_Backlog,\n  Get_Project_Task,\n  Delete_Project_Task\n} from \"../actions/types\";\n\nconst initState = {\n  project_tasks: [],\n  project_task: {}\n};\n\nexport default function(state = initState, action) {\n  switch (action.type) {\n    case Get_Backlog:\n      return {\n        ...state,\n        project_tasks: action.payload\n      };\n\n    case Get_Project_Task:\n      return {\n        ...state,\n        project_task: action.payload\n      };\n\n    case Delete_Project_Task:\n      return {\n        ...state,\n        project_tasks: state.project_tasks.filter(\n          project_task => project_task.projectSeq !== action.payload\n        )\n      };\n\n    default:\n      return state;\n  }\n}\n","import { Set_Current_User } from \"../actions/types\";\n\nconst initialState = {\n  validToken: false,\n  user: {}\n};\n\nconst booleanActionPayload = payload => {\n  if (payload) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case Set_Current_User:\n      return {\n        ...state,\n        validToken: booleanActionPayload(action.payload),\n        user: action.payload\n      };\n\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport errorReducer from \"./errorReducer\";\nimport projectReducer from \"./projectReducer\";\nimport backlogReducer from \"./backlogReducer\";\nimport securityReducer from \"./securityReducer\";\n\nexport default combineReducers({\n  errors: errorReducer,\n  project: projectReducer,\n  backlog: backlogReducer,\n  security: securityReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools =\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n  store = createStore(\n    rootReducer,\n    initState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else if (\n  window.navigator.userAgent.includes(\"Firefox\") &&\n  ReactReduxDevTools\n) {\n  store = createStore(\n    rootReducer,\n    initState,\n    compose(\n      applyMiddleware(...middleware),\n      ReactReduxDevTools\n    )\n  );\n} else {\n  store = createStore(\n    rootReducer,\n    initState,\n    compose(applyMiddleware(...middleware))\n  );\n}\n\nexport default store;\n","import React, { Component } from \"react\";\nimport { getProject, createProject } from \"../../actions/projectAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass UpdateProject extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectName: \"\",\n      projectIdentifier: \"\",\n      description: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    const {\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    } = nextProps.project;\n\n    this.setState({\n      id,\n      projectName,\n      projectIdentifier,\n      description,\n      start_date,\n      end_date\n    });\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getProject(id, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n    console.log(\"state:\" + this.state.start_date);\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const updateProject = {\n      id: this.state.id,\n      projectName: this.state.projectName,\n      projectIdentifier: this.state.projectIdentifier,\n      description: this.state.description,\n      start_date: this.state.start_date,\n      end_date: this.state.end_date\n    };\n\n    this.props.createProject(updateProject, this.props.history);\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"project\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\n              <hr />\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.projectName\n                    })}\n                    placeholder=\"Project Name\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.onChange}\n                  />\n                  {errors.projectName && (\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Unique Project ID\"\n                    name=\"projectIdentifier\"\n                    value={this.state.projectIdentifier}\n                    onChange={this.onChange}\n                    disabled\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.description\n                    })}\n                    placeholder=\"Project Description\"\n                    name=\"description\"\n                    onChange={this.onChange}\n                    value={this.state.description}\n                  />\n                  {errors.description && (\n                    <div className=\"invalid-feedback\">{errors.description}</div>\n                  )}\n                </div>\n                <h6>Start Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"start_date\"\n                    value={this.state.start_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Estimated End Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"end_date\"\n                    value={this.state.end_date}\n                    onChange={this.onChange}\n                  />\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nUpdateProject.propTypes = {\n  getProject: PropTypes.func.isRequired,\n  createProject: PropTypes.func.isRequired,\n  project: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project: state.project.project,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProject, createProject }\n)(UpdateProject);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { formatDate } from \"../../../DateFormat/DateFormat\";\n\nclass ProjectTask extends Component {\n  onDeleteClick(backlog_id, pt_id) {\n    this.props.deleteProjectTask(backlog_id, pt_id);\n  }\n  render() {\n    const { project_task } = this.props;\n\n    let priorityString;\n    let priorityClass;\n\n    if (project_task.priority === 1) {\n      priorityClass = \"bg-danger text-light\";\n      priorityString = \"HIGH\";\n    }\n\n    if (project_task.priority === 2) {\n      priorityClass = \"bg-warning text-light\";\n      priorityString = \"MEDIUM\";\n    }\n\n    if (project_task.priority === 3) {\n      priorityClass = \"bg-info text-light\";\n      priorityString = \"LOW\";\n    }\n\n    return (\n      <div className=\"card mb-1 bg-light\">\n        <div className={`card-header text-primary ${priorityClass}`}>\n          ID: {project_task.projectSeq} -- Priority: {priorityString}\n        </div>\n        <div className=\"card-body bg-light\">\n          <h5 className=\"card-title\">{project_task.summary}</h5>\n          <p className=\"card-text text-truncate \">\n            {project_task.acceptCriteria}\n          </p>\n          <p>Due date: {formatDate(project_task.dueDate)}</p>\n          <Link\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${\n              project_task.projectSeq\n            }`}\n            className=\"btn btn-primary\"\n          >\n            View / Update\n          </Link>\n\n          <button\n            className=\"btn btn-danger ml-4\"\n            onClick={this.onDeleteClick.bind(\n              this,\n              project_task.projectIdentifier,\n              project_task.projectSeq\n            )}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\nProjectTask.propTypes = {\n  deleteProjectTask: PropTypes.func.isRequired\n};\nexport default connect(\n  null,\n  { deleteProjectTask }\n)(ProjectTask);\n","import axios from \"axios\";\nimport {\n  Get_Errors,\n  Get_Backlog,\n  Get_Project_Task,\n  Delete_Project_Task\n} from \"./types\";\n\nexport const addProjectTask = (\n  backlog_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.post(`/api/backlog/${backlog_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: Get_Errors,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: Get_Errors,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}`);\n    dispatch({\n      type: Get_Backlog,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: Get_Errors,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const getProjectTask = (\n  backlog_id,\n  pt_id,\n  history\n) => async dispatch => {\n  try {\n    const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: Get_Project_Task,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    history.push(\"/dashboard\");\n  }\n};\n\nexport const updateProjectTask = (\n  backlog_id,\n  pt_id,\n  project_task,\n  history\n) => async dispatch => {\n  try {\n    await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_task);\n    history.push(`/projectBoard/${backlog_id}`);\n    dispatch({\n      type: Get_Errors,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: Get_Errors,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n  if (\n    window.confirm(\n      `You are deleting project task ${pt_id}, this action cannot be undone`\n    )\n  ) {\n    await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    dispatch({\n      type: Delete_Project_Task,\n      payload: pt_id\n    });\n  }\n};\n","import React, { Component } from \"react\";\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\n\nclass Backlog extends Component {\n  render() {\n    const { project_tasks_prop } = this.props;\n\n    const tasks = project_tasks_prop.map(project_task => (\n      <ProjectTask key={project_task.id} project_task={project_task} />\n    ));\n\n    let todoItems = [];\n    let inProgressItems = [];\n    let doneItems = [];\n\n    for (let i = 0; i < tasks.length; i++) {\n      if (tasks[i].props.project_task.status === \"TO_DO\") {\n        todoItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"IN_PROGRESS\") {\n        inProgressItems.push(tasks[i]);\n      }\n\n      if (tasks[i].props.project_task.status === \"DONE\") {\n        doneItems.push(tasks[i]);\n      }\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-secondary text-white\">\n                <h3>TO DO</h3>\n              </div>\n            </div>\n            {todoItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-primary text-white\">\n                <h3>In Progress</h3>\n              </div>\n            </div>\n            {inProgressItems}\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"card text-center mb-2\">\n              <div className=\"card-header bg-success text-white\">\n                <h3>Done</h3>\n              </div>\n            </div>\n            {doneItems}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Backlog;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Backlog from \"./Backlog\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getBacklog } from \"../../actions/backlogAction\";\n\nclass ProjectBoard extends Component {\n  //constructor to handle errors\n  constructor() {\n    super();\n    this.state = {\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.getBacklog(id);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { project_tasks } = this.props.backlog;\n    const { errors } = this.state;\n\n    let BoardContent;\n\n    const boardAlgorithm = (errors, project_tasks) => {\n      if (project_tasks.length < 1) {\n        if (errors.projectNotFound) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectNotFound}\n            </div>\n          );\n        } else if (errors.projectIdentifier) {\n          return (\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\n              {errors.projectIdentifier}\n            </div>\n          );\n        } else {\n          return (\n            <div className=\"alert alert-info text-center\" role=\"alert\">\n              No Project Tasks on this board\n            </div>\n          );\n        }\n      } else {\n        return <Backlog project_tasks_prop={project_tasks} />;\n      }\n    };\n\n    BoardContent = boardAlgorithm(errors, project_tasks);\n\n    return (\n      <div className=\"container\">\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n        {BoardContent}\n      </div>\n    );\n  }\n}\n\nProjectBoard.propTypes = {\n  backlog: PropTypes.object.isRequired,\n  getBacklog: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  backlog: state.backlog,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getBacklog }\n)(ProjectBoard);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { addProjectTask } from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass AddProjectTask extends Component {\n  constructor(props) {\n    super(props);\n    const { id } = this.props.match.params;\n\n    this.state = {\n      summary: \"\",\n      acceptCriteria: \"\",\n      status: \"\",\n      priority: 0,\n      dueDate: \"\",\n      projectIdentifier: id,\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  // on change\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  //on submit\n  onSubmit(e) {\n    e.preventDefault();\n\n    const newTask = {\n      summary: this.state.summary,\n      acceptCriteria: this.state.acceptCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate\n    };\n    console.log(newTask);\n\n    this.props.addProjectTask(\n      this.state.projectIdentifier,\n      newTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { id } = this.props.match.params;\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\n              <p className=\"lead text-center\">Project Name + Project Code</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptCriteria\"\n                    value={this.state.acceptCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddProjectTask.propTypes = {\n  addProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { addProjectTask }\n)(AddProjectTask);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { Link } from \"react-router-dom\";\nimport {\n  getProjectTask,\n  updateProjectTask\n} from \"../../../actions/backlogAction\";\nimport PropTypes from \"prop-types\";\n\nclass UpdateProjectTask extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      id: \"\",\n      projectSeq: \"\",\n      summary: \"\",\n      acceptCriteria: \"\",\n      status: \"\",\n      priority: \"\",\n      dueDate: \"\",\n      projectIdentifier: \"\",\n      create_At: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    const { backlog_id, pt_id } = this.props.match.params;\n    this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n    console.log(nextProps);\n\n    const {\n      id,\n      projectSeq,\n      summary,\n      acceptCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    } = nextProps.project_task;\n\n    this.setState({\n      id,\n      projectSeq,\n      summary,\n      acceptCriteria,\n      status,\n      priority,\n      dueDate,\n      projectIdentifier,\n      create_At\n    });\n    // console.log(this.state);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const UpdateProjectTask = {\n      id: this.state.id,\n      projectSeq: this.state.projectSeq,\n      summary: this.state.summary,\n      acceptCriteria: this.state.acceptCriteria,\n      status: this.state.status,\n      priority: this.state.priority,\n      dueDate: this.state.dueDate,\n      projectIdentifier: this.state.projectIdentifier,\n      create_At: this.state.create_At\n    };\n\n    // console.log(UpdateProjectTask);\n    this.props.updateProjectTask(\n      this.state.projectIdentifier,\n      this.state.projectSeq,\n      UpdateProjectTask,\n      this.props.history\n    );\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"add-PBI\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <Link\n                to={`/projectBoard/${this.state.projectIdentifier}`}\n                className=\"btn btn-light\"\n              >\n                Back to Project Board\n              </Link>\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\n              <p className=\"lead text-center\">\n                Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}\n                {this.state.projectSeq}{\" \"}\n              </p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.summary\n                    })}\n                    name=\"summary\"\n                    placeholder=\"Project Task summary\"\n                    value={this.state.summary}\n                    onChange={this.onChange}\n                  />\n                  {errors.summary && (\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <textarea\n                    className=\"form-control form-control-lg\"\n                    placeholder=\"Acceptance Criteria\"\n                    name=\"acceptCriteria\"\n                    value={this.state.acceptCriteria}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <h6>Due Date</h6>\n                <div className=\"form-group\">\n                  <input\n                    type=\"date\"\n                    className=\"form-control form-control-lg\"\n                    name=\"dueDate\"\n                    value={this.state.dueDate}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"priority\"\n                    value={this.state.priority}\n                    onChange={this.onChange}\n                  >\n                    <option value={0}>Select Priority</option>\n                    <option value={1}>High</option>\n                    <option value={2}>Medium</option>\n                    <option value={3}>Low</option>\n                  </select>\n                </div>\n\n                <div className=\"form-group\">\n                  <select\n                    className=\"form-control form-control-lg\"\n                    name=\"status\"\n                    value={this.state.status}\n                    onChange={this.onChange}\n                  >\n                    <option value=\"\">Select Status</option>\n                    <option value=\"TO_DO\">TO DO</option>\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                    <option value=\"DONE\">DONE</option>\n                  </select>\n                </div>\n\n                <input\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-block mt-4\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nUpdateProjectTask.propTypes = {\n  getProjectTask: PropTypes.func.isRequired,\n  project_task: PropTypes.object.isRequired,\n  updateProjectTask: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  project_task: state.backlog.project_task,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { getProjectTask, updateProjectTask }\n)(UpdateProjectTask);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\nimport { login } from \"../../actions/securityAction\";\n\nclass Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  omponentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const LoginRequest = {\n      username: this.state.username,\n      password: this.state.password\n    };\n\n    this.props.login(LoginRequest);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Log In</h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security,\n  errors: state.errors\n});\n\nexport default connect(\n  mapStateToProps,\n  { login }\n)(Login);\n","import React, { Component } from \"react\";\nimport { createNewUser } from \"../../actions/securityAction\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classnames from \"classnames\";\n\nclass Register extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      username: \"\",\n      fullName: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      errors: {}\n    };\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const newUser = {\n      username: this.state.username,\n      fullName: this.state.fullName,\n      password: this.state.password,\n      confirmPassword: this.state.confirmPassword\n    };\n\n    this.props.createNewUser(newUser, this.props.history);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { errors } = this.state;\n    return (\n      <div className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 m-auto\">\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\n              <p className=\"lead text-center\">Create your Account</p>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.fullName\n                    })}\n                    placeholder=\"Full Name\"\n                    name=\"fullName\"\n                    value={this.state.fullName}\n                    onChange={this.onChange}\n                  />\n                  {errors.fullName && (\n                    <div className=\"invalid-feedback\">{errors.fullName}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"text\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.username\n                    })}\n                    placeholder=\"Email Address (Username)\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChange}\n                  />\n                  {errors.username && (\n                    <div className=\"invalid-feedback\">{errors.username}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.password\n                    })}\n                    placeholder=\"Password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                  {errors.password && (\n                    <div className=\"invalid-feedback\">{errors.password}</div>\n                  )}\n                </div>\n                <div className=\"form-group\">\n                  <input\n                    type=\"password\"\n                    className={classnames(\"form-control form-control-lg\", {\n                      \"is-invalid\": errors.confirmPassword\n                    })}\n                    placeholder=\"Confirm Password\"\n                    name=\"confirmPassword\"\n                    value={this.state.confirmPassword}\n                    onChange={this.onChange}\n                  />\n                  {errors.confirmPassword && (\n                    <div className=\"invalid-feedback\">\n                      {errors.confirmPassword}\n                    </div>\n                  )}\n                </div>\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  createNewUser: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  security: state.security\n});\nexport default connect(\n  mapStateToProps,\n  { createNewUser }\n)(Register);\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nclass Landing extends Component {\n  componentDidMount() {\n    if (this.props.security.validToken) {\n      this.props.history.push(\"/dashboard\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-12 text-center\">\n                <h1 className=\"display-3 mb-4\">Manage My Projects</h1>\n                <p className=\"lead\">\n                  Create your account to start managing your projects\n                </p>\n                <hr />\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\n                  Sign Up\n                </Link>\n                <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\">\n                  Login\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLanding.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(Landing);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\n  <Route\n    {...otherProps}\n    render={props =>\n      security.validToken === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nSecuredRoute.propTypes = {\n  security: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  security: state.security\n});\n\nexport default connect(mapStateToProps)(SecuredRoute);\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport Landing from \"./components/Layout/Landing\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { Set_Current_User } from \"./actions/types\";\nimport { logout } from \"./actions/securityAction\";\nimport SecuredRoute from \"./securityUtils/SecureRoute\";\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: Set_Current_User,\n    payload: decoded_jwtToken\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    //handle logout\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            {\n              // public routes\n            }\n            <Route exact path=\"/\" component={Landing} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n\n            {\n              //private routes\n            }\n            <Switch>\n              <SecuredRoute exact path=\"/dashboard\" component={Dashboard} />\n              <SecuredRoute exact path=\"/addProject\" component={AddProject} />\n              <SecuredRoute\n                exact\n                path=\"/updateProject/:id\"\n                component={UpdateProject}\n              />\n              <SecuredRoute\n                exact\n                path=\"/projectBoard/:id\"\n                component={ProjectBoard}\n              />\n              <SecuredRoute\n                exact\n                path=\"/addProjectTask/:id\"\n                component={AddProjectTask}\n              />\n              <SecuredRoute\n                exact\n                path=\"/updateProjectTask/:backlog_id/:pt_id\"\n                component={UpdateProjectTask}\n              />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}